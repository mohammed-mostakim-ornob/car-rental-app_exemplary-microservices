import microservices from "CarService.services" as CarService
import technology from "../technology/docker2.technology" as containerTechnology
import technology from "../technology/java2.technology" as protocolTechnology

@technology(containerTechnology)
@technology(protocolTechnology)
container CarServiceContainer deployment technology containerTechnology::_deployment.Docker
	deploys CarService::de.uniba.dsg.carrental.CarService {
	aspects {
		containerTechnology::_aspects.Dockerfile('
			#FROM openjdk:16-slim
			FROM maven:3.8.2-openjdk-16 AS build-env

			#making work directory
			RUN mkdir -p /usr/src/app/services/car-service
			
			#defining work directory
			WORKDIR /usr/src/app/services/car-service
			
			
			#copy to the Project Directory
			COPY  ./car-service /usr/src/app/services/car-service
			
			
			#building app
			RUN mvn clean package
			
			#assigning entry point
			ENTRYPOINT ["java", "-jar", "/usr/src/app/services/car-service/target/car-service-0.0.1-SNAPSHOT.jar"]
		');

		containerTechnology::_aspects.ComposePart('
			car:
		        build:
		            context: ./
		            dockerfile: ./car-service/Dockerfile
		        ports:
		            - "8100:8100
		        environment:
		            - server_port=8100
		            - active_profiles=default
		            - config_server=http://config:8888
		            - eureka_default_zone=http://discovery:8761/eureka
		
		            - spring.datasource.url=jdbc:postgresql://car-db:5432/car_db
		            - spring.datasource.username=admin
		            - spring.datasource.password=admin
		            - spring.datasource.driver-class-name=org.postgresql.Driver
		
		            - architecture_extraction_create_instance_endpoint=http://host.docker.internal:9001/management-service/ServiceInstances
		        depends_on:
		            - config
		            - car-db
		            - discovery
		        links:
		            - config
		            - car-db
		            - discovery
		        restart: on-failure
		        networks:
		            - car-rental
		        volumes:
		            - service_bkp_car:/var/lib/car-service
		');
	}
}
