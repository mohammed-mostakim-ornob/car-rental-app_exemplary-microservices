context car {
	structure Car <entity> {
		string code <identifier>,
		Manufacturer manufacturer,
		string model,
		double rentPerKilo
	}
	
	structure Manufacturer <entity> {
		string name <identifier>
	}
	
	list CarList {Car c}
	
	list ManufacturerList {Manufacturer m}
	
	structure CarCollectionModel <valueObject> {
		immutable CarList carlist
	}
	
	structure ManufacturerCollectionModel <valueObject> {
		immutable ManufacturerList manufacturerlist
	}
	
	structure CarRepository <repository> {
		immutable Car car,
		immutable string code,
		function CarList findCarsByManufacturerName(string manufacturerName)
	}
	
	structure ManufacturerRepository <repository> {
		immutable Manufacturer manufacturer,
		immutable string name
	}
	
	structure CarService <domainService> {
		function CarList getAllCars,
		function Car getCar(string code),
		function CarList getCarsByManufacturer(string manufacturerName)
	}
	
	structure ManufacturerService <domainService> {
		function Manufacturer getAllManufacturers,
		function Manufacturer getManufacturer(string name)
	}
}