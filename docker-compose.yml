version: '3.8'

services:
  db:
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=password
    ports:
      - '3306:3306'
    entrypoint:
      sh -c "
      echo 'CREATE DATABASE IF NOT EXISTS db_car; CREATE DATABASE IF NOT EXISTS db_location;' > /docker-entrypoint-initdb.d/init.sql;
      /usr/local/bin/docker-entrypoint.sh --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
      "
    networks:
      - car-rental

  discovery:
    build:
      context: ./
      dockerfile: ./discovery-service/Dockerfile
    ports:
      - '8761:8761'
    environment:
      - server_port=8761
    networks:
      - car-rental

  config:
    build:
      context: ./
      dockerfile: ./config-service/Dockerfile
    ports:
      - '8888:8888'
    environment:
      - server_port=8888
      - config_server_default_branch=main
      - config_server_git_uri=https://github.com/mohammed-mostakim-ornob/car-rental-config
    networks:
      - car-rental

  car:
    build:
      context: ./
      dockerfile: ./car-service/Dockerfile
    ports:
      - '8100:8100'
    environment:
      - server_port=8100
      - active_profiles=default
      - config_server=http://config:8888
      - eureka_default_zone=http://discovery:8761/eureka

      - spring.datasource.url=jdbc:mysql://db:3306/db_car
      - spring.datasource.username=root
      - spring.datasource.password=password
      - spring.datasource.driver-class-name=com.mysql.jdbc.Driver
    depends_on:
      - config
      - db
      - discovery
    links:
      - config
      - db
      - discovery
    restart: on-failure
    networks:
      - car-rental

  location:
    build:
      context: ./
      dockerfile: ./location-service/Dockerfile
    ports:
      - '8200:8200'
    environment:
      - server_port=8200
      - active_profiles=default
      - config_server=http://config:8888
      - eureka_default_zone=http://discovery:8761/eureka

      - spring.datasource.url=jdbc:mysql://db:3306/db_location
      - spring.datasource.username=root
      - spring.datasource.password=password
      - spring.datasource.driver-class-name=com.mysql.jdbc.Driver
    depends_on:
      - config
      - db
      - discovery
    links:
      - config
      - db
      - discovery
    restart: on-failure
    networks:
      - car-rental

  rent:
    build:
      context: ./
      dockerfile: ./rent-service/Dockerfile
    ports:
      - '8300:8300'
    environment:
      - server_port=8300
      - active_profiles=default
      - config_server=http://config:8888
      - eureka_default_zone=http://discovery:8761/eureka
    depends_on:
      - discovery
      - config
      - car
      - location
    links:
      - discovery
      - config
      - car
      - location
    restart: on-failure
    networks:
      - car-rental

  api-gateway:
    build:
      context: ./
      dockerfile: ./api-gateway/Dockerfile
    ports:
      - '8000:8000'
    environment:
      - server_port=8000
      - active_profiles=default
      - config_server=http://config:8888
      - eureka_default_zone=http://discovery:8761/eureka
    depends_on:
      - car
      - location
      - rent
    links:
      - car
      - location
      - rent
    restart: on-failure
    networks:
      - car-rental

networks:
  car-rental: